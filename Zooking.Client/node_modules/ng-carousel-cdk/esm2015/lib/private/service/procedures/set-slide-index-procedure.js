import { procedurePipe } from '../../models/procedure/procedure-pipe';
import { animationOffsetSnapshotProcedure } from '../helpers/animation-offset-snapshot/animation-offset-snapshot-procedure';
import { calculateOffsetProcedure } from '../helpers/calculate-offset/calculate-offset-procedure';
import { destroyAnimationProcedure } from '../helpers/destroy-animation/destroy-animation-procedure';
import { markVisibleAndActiveProcedure } from '../helpers/mark-visible-and-active/mark-visible-and-active-procedure';
import { shuffleSlidesProcedure } from '../helpers/shuffle-slides/shuffle-slides-procedure';
import { startAnimationProcedure } from '../helpers/start-animation/start-animation-procedure';
import { setOffsetSnapshotProcedure } from './set-offset-snapshot/set-offset-snapshot-procedure';
/**
 * Calculates corresponding parts for current active slide
 */
export function setSlideIndexProcedure() {
    return procedurePipe('setSlideIndex', animationOffsetSnapshotProcedure(), destroyAnimationProcedure(), setOffsetSnapshotProcedure(), markVisibleAndActiveProcedure(), calculateOffsetProcedure(), shuffleSlidesProcedure(), startAnimationProcedure());
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0LXNsaWRlLWluZGV4LXByb2NlZHVyZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25nLWNhcm91c2VsL3NyYy9saWIvcHJpdmF0ZS9zZXJ2aWNlL3Byb2NlZHVyZXMvc2V0LXNsaWRlLWluZGV4LXByb2NlZHVyZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFFdEUsT0FBTyxFQUFFLGdDQUFnQyxFQUFFLE1BQU0sMEVBQTBFLENBQUM7QUFDNUgsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sd0RBQXdELENBQUM7QUFDbEcsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sMERBQTBELENBQUM7QUFDckcsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0sc0VBQXNFLENBQUM7QUFDckgsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sb0RBQW9ELENBQUM7QUFDNUYsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sc0RBQXNELENBQUM7QUFDL0YsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0scURBQXFELENBQUM7QUFFakc7O0dBRUc7QUFDSCxNQUFNLFVBQVUsc0JBQXNCO0lBQ2xDLE9BQU8sYUFBYSxDQUFDLGVBQWUsRUFDaEMsZ0NBQWdDLEVBQUUsRUFDbEMseUJBQXlCLEVBQUUsRUFDM0IsMEJBQTBCLEVBQUUsRUFDNUIsNkJBQTZCLEVBQUUsRUFDL0Isd0JBQXdCLEVBQUUsRUFDMUIsc0JBQXNCLEVBQUUsRUFDeEIsdUJBQXVCLEVBQUUsQ0FDNUIsQ0FBQztBQUNOLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwcm9jZWR1cmVQaXBlIH0gZnJvbSAnLi4vLi4vbW9kZWxzL3Byb2NlZHVyZS9wcm9jZWR1cmUtcGlwZSc7XG5pbXBvcnQgeyBQcm9jZWR1cmUgfSBmcm9tICcuLi8uLi9tb2RlbHMvcHJvY2VkdXJlL3Byb2NlZHVyZS50eXBlJztcbmltcG9ydCB7IGFuaW1hdGlvbk9mZnNldFNuYXBzaG90UHJvY2VkdXJlIH0gZnJvbSAnLi4vaGVscGVycy9hbmltYXRpb24tb2Zmc2V0LXNuYXBzaG90L2FuaW1hdGlvbi1vZmZzZXQtc25hcHNob3QtcHJvY2VkdXJlJztcbmltcG9ydCB7IGNhbGN1bGF0ZU9mZnNldFByb2NlZHVyZSB9IGZyb20gJy4uL2hlbHBlcnMvY2FsY3VsYXRlLW9mZnNldC9jYWxjdWxhdGUtb2Zmc2V0LXByb2NlZHVyZSc7XG5pbXBvcnQgeyBkZXN0cm95QW5pbWF0aW9uUHJvY2VkdXJlIH0gZnJvbSAnLi4vaGVscGVycy9kZXN0cm95LWFuaW1hdGlvbi9kZXN0cm95LWFuaW1hdGlvbi1wcm9jZWR1cmUnO1xuaW1wb3J0IHsgbWFya1Zpc2libGVBbmRBY3RpdmVQcm9jZWR1cmUgfSBmcm9tICcuLi9oZWxwZXJzL21hcmstdmlzaWJsZS1hbmQtYWN0aXZlL21hcmstdmlzaWJsZS1hbmQtYWN0aXZlLXByb2NlZHVyZSc7XG5pbXBvcnQgeyBzaHVmZmxlU2xpZGVzUHJvY2VkdXJlIH0gZnJvbSAnLi4vaGVscGVycy9zaHVmZmxlLXNsaWRlcy9zaHVmZmxlLXNsaWRlcy1wcm9jZWR1cmUnO1xuaW1wb3J0IHsgc3RhcnRBbmltYXRpb25Qcm9jZWR1cmUgfSBmcm9tICcuLi9oZWxwZXJzL3N0YXJ0LWFuaW1hdGlvbi9zdGFydC1hbmltYXRpb24tcHJvY2VkdXJlJztcbmltcG9ydCB7IHNldE9mZnNldFNuYXBzaG90UHJvY2VkdXJlIH0gZnJvbSAnLi9zZXQtb2Zmc2V0LXNuYXBzaG90L3NldC1vZmZzZXQtc25hcHNob3QtcHJvY2VkdXJlJztcblxuLyoqXG4gKiBDYWxjdWxhdGVzIGNvcnJlc3BvbmRpbmcgcGFydHMgZm9yIGN1cnJlbnQgYWN0aXZlIHNsaWRlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXRTbGlkZUluZGV4UHJvY2VkdXJlKCk6IFByb2NlZHVyZSB7XG4gICAgcmV0dXJuIHByb2NlZHVyZVBpcGUoJ3NldFNsaWRlSW5kZXgnLFxuICAgICAgICBhbmltYXRpb25PZmZzZXRTbmFwc2hvdFByb2NlZHVyZSgpLFxuICAgICAgICBkZXN0cm95QW5pbWF0aW9uUHJvY2VkdXJlKCksXG4gICAgICAgIHNldE9mZnNldFNuYXBzaG90UHJvY2VkdXJlKCksXG4gICAgICAgIG1hcmtWaXNpYmxlQW5kQWN0aXZlUHJvY2VkdXJlKCksXG4gICAgICAgIGNhbGN1bGF0ZU9mZnNldFByb2NlZHVyZSgpLFxuICAgICAgICBzaHVmZmxlU2xpZGVzUHJvY2VkdXJlKCksXG4gICAgICAgIHN0YXJ0QW5pbWF0aW9uUHJvY2VkdXJlKCksXG4gICAgKTtcbn1cbiJdfQ==