import { ContinueWith } from '../../../models/procedure/handler/contiue-with.model';
import { getViewportWidth } from '../get-viewport-width/get-viewport-width';
import { markVisibleAndActive } from './mark-visible-and-active';
/**
 * Assigns inViewport and isActive option to each slide
 */
export function markVisibleAndActiveProcedure() {
    return ({ state, procedureState }) => {
        var _a, _b;
        const result = markVisibleAndActive(state.slides, state.offset, state.config.slideWidth, getViewportWidth(state), state.activeSlideIndex, state.config.threshold, state.config.alignMode);
        state.slides = result.slides;
        state.activeItemIndex = (_b = (_a = result.slides[state.activeSlideIndex]) === null || _a === void 0 ? void 0 : _a.itemIndex) !== null && _b !== void 0 ? _b : 0; // Undefined when no slides available
        procedureState.inViewportRange = [result.inViewportRangeStart, result.inViewportRangeEnd];
        return new ContinueWith(state, procedureState);
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFyay12aXNpYmxlLWFuZC1hY3RpdmUtcHJvY2VkdXJlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmctY2Fyb3VzZWwvc3JjL2xpYi9wcml2YXRlL3NlcnZpY2UvaGVscGVycy9tYXJrLXZpc2libGUtYW5kLWFjdGl2ZS9tYXJrLXZpc2libGUtYW5kLWFjdGl2ZS1wcm9jZWR1cmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHNEQUFzRCxDQUFDO0FBR3BGLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDBDQUEwQyxDQUFDO0FBQzVFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBRWpFOztHQUVHO0FBQ0gsTUFBTSxVQUFVLDZCQUE2QjtJQUN6QyxPQUFPLENBQUMsRUFBQyxLQUFLLEVBQUUsY0FBYyxFQUF1QixFQUFFLEVBQUU7O1FBQ3JELE1BQU0sTUFBTSxHQUFHLG9CQUFvQixDQUMvQixLQUFLLENBQUMsTUFBTSxFQUNaLEtBQUssQ0FBQyxNQUFNLEVBQ1osS0FBSyxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQ3ZCLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxFQUN2QixLQUFLLENBQUMsZ0JBQWdCLEVBQ3RCLEtBQUssQ0FBQyxNQUFNLENBQUMsU0FBUyxFQUN0QixLQUFLLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FDekIsQ0FBQztRQUNGLEtBQUssQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQztRQUM3QixLQUFLLENBQUMsZUFBZSxlQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLGdCQUFnQixDQUFDLDBDQUFFLFNBQVMsbUNBQUksQ0FBQyxDQUFDLENBQUMscUNBQXFDO1FBQ3BILGNBQWMsQ0FBQyxlQUFlLEdBQUcsQ0FBQyxNQUFNLENBQUMsb0JBQW9CLEVBQUUsTUFBTSxDQUFDLGtCQUFrQixDQUFDLENBQUM7UUFFMUYsT0FBTyxJQUFJLFlBQVksQ0FBQyxLQUFLLEVBQUUsY0FBYyxDQUFDLENBQUM7SUFDbkQsQ0FBQyxDQUFDO0FBQ04sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbnRpbnVlV2l0aCB9IGZyb20gJy4uLy4uLy4uL21vZGVscy9wcm9jZWR1cmUvaGFuZGxlci9jb250aXVlLXdpdGgubW9kZWwnO1xuaW1wb3J0IHsgUHJvY2VkdXJlU3RhdGVGYWNhZGUgfSBmcm9tICcuLi8uLi8uLi9tb2RlbHMvcHJvY2VkdXJlL3Byb2NlZHVyZS1zdGF0ZS1mYWNhZGUuaW50ZXJmYWNlJztcbmltcG9ydCB7IFByb2NlZHVyZSB9IGZyb20gJy4uLy4uLy4uL21vZGVscy9wcm9jZWR1cmUvcHJvY2VkdXJlLnR5cGUnO1xuaW1wb3J0IHsgZ2V0Vmlld3BvcnRXaWR0aCB9IGZyb20gJy4uL2dldC12aWV3cG9ydC13aWR0aC9nZXQtdmlld3BvcnQtd2lkdGgnO1xuaW1wb3J0IHsgbWFya1Zpc2libGVBbmRBY3RpdmUgfSBmcm9tICcuL21hcmstdmlzaWJsZS1hbmQtYWN0aXZlJztcblxuLyoqXG4gKiBBc3NpZ25zIGluVmlld3BvcnQgYW5kIGlzQWN0aXZlIG9wdGlvbiB0byBlYWNoIHNsaWRlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtYXJrVmlzaWJsZUFuZEFjdGl2ZVByb2NlZHVyZSgpOiBQcm9jZWR1cmUge1xuICAgIHJldHVybiAoe3N0YXRlLCBwcm9jZWR1cmVTdGF0ZX06IFByb2NlZHVyZVN0YXRlRmFjYWRlKSA9PiB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IG1hcmtWaXNpYmxlQW5kQWN0aXZlKFxuICAgICAgICAgICAgc3RhdGUuc2xpZGVzLFxuICAgICAgICAgICAgc3RhdGUub2Zmc2V0LFxuICAgICAgICAgICAgc3RhdGUuY29uZmlnLnNsaWRlV2lkdGgsXG4gICAgICAgICAgICBnZXRWaWV3cG9ydFdpZHRoKHN0YXRlKSxcbiAgICAgICAgICAgIHN0YXRlLmFjdGl2ZVNsaWRlSW5kZXgsXG4gICAgICAgICAgICBzdGF0ZS5jb25maWcudGhyZXNob2xkLFxuICAgICAgICAgICAgc3RhdGUuY29uZmlnLmFsaWduTW9kZSxcbiAgICAgICAgKTtcbiAgICAgICAgc3RhdGUuc2xpZGVzID0gcmVzdWx0LnNsaWRlcztcbiAgICAgICAgc3RhdGUuYWN0aXZlSXRlbUluZGV4ID0gcmVzdWx0LnNsaWRlc1tzdGF0ZS5hY3RpdmVTbGlkZUluZGV4XT8uaXRlbUluZGV4ID8/IDA7IC8vIFVuZGVmaW5lZCB3aGVuIG5vIHNsaWRlcyBhdmFpbGFibGVcbiAgICAgICAgcHJvY2VkdXJlU3RhdGUuaW5WaWV3cG9ydFJhbmdlID0gW3Jlc3VsdC5pblZpZXdwb3J0UmFuZ2VTdGFydCwgcmVzdWx0LmluVmlld3BvcnRSYW5nZUVuZF07XG5cbiAgICAgICAgcmV0dXJuIG5ldyBDb250aW51ZVdpdGgoc3RhdGUsIHByb2NlZHVyZVN0YXRlKTtcbiAgICB9O1xufVxuIl19