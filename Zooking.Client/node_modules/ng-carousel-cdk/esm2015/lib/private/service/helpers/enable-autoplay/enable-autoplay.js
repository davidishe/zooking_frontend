import { interval } from 'rxjs';
import { CarouselAutoplay } from '../../../models/carousel-autoplay';
/** Starts carousel autoplay whether one is enabled */
export function enableAutoplay(autoplayEnabled, transitionDuration, autoplayDelay, isBrowser, autoplayAction, suspender, autoplay) {
    var _a;
    if (!autoplay) {
        autoplay = new CarouselAutoplay();
    }
    (_a = autoplay.autoplaySubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();
    if (!autoplay.autoplaySuspenders) {
        autoplay.autoplaySuspenders = new Set();
    }
    if (suspender) {
        autoplay.autoplaySuspenders.delete(suspender);
    }
    if (autoplayEnabled && !autoplay.autoplaySuspenders.size && isBrowser) {
        // Delay can't be smaller than transition itself in order to avoid endless animation
        autoplay.interval = Math.max(transitionDuration, autoplayDelay);
        autoplay.autoplaySubscription = interval(autoplay.interval).subscribe(autoplayAction);
    }
    return autoplay;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW5hYmxlLWF1dG9wbGF5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmctY2Fyb3VzZWwvc3JjL2xpYi9wcml2YXRlL3NlcnZpY2UvaGVscGVycy9lbmFibGUtYXV0b3BsYXkvZW5hYmxlLWF1dG9wbGF5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFHaEMsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFFckUsc0RBQXNEO0FBQ3RELE1BQU0sVUFBVSxjQUFjLENBQzFCLGVBQXdCLEVBQ3hCLGtCQUEwQixFQUMxQixhQUFxQixFQUNyQixTQUFrQixFQUNsQixjQUEwQixFQUMxQixTQUE2QixFQUM3QixRQUEyQjs7SUFFM0IsSUFBSSxDQUFDLFFBQVEsRUFBRTtRQUNYLFFBQVEsR0FBRyxJQUFJLGdCQUFnQixFQUFFLENBQUM7S0FDckM7SUFDRCxNQUFBLFFBQVEsQ0FBQyxvQkFBb0IsMENBQUUsV0FBVyxHQUFHO0lBQzdDLElBQUksQ0FBQyxRQUFRLENBQUMsa0JBQWtCLEVBQUU7UUFDOUIsUUFBUSxDQUFDLGtCQUFrQixHQUFHLElBQUksR0FBRyxFQUFxQixDQUFDO0tBQzlEO0lBQ0QsSUFBSSxTQUFTLEVBQUU7UUFDWCxRQUFRLENBQUMsa0JBQWtCLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0tBQ2pEO0lBQ0QsSUFBSSxlQUFlLElBQUksQ0FBQyxRQUFRLENBQUMsa0JBQWtCLENBQUMsSUFBSSxJQUFJLFNBQVMsRUFBRTtRQUNuRSxvRkFBb0Y7UUFDcEYsUUFBUSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLGtCQUFrQixFQUFFLGFBQWEsQ0FBQyxDQUFDO1FBQ2hFLFFBQVEsQ0FBQyxvQkFBb0IsR0FBRyxRQUFRLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxjQUFjLENBQUMsQ0FBQztLQUN6RjtJQUVELE9BQU8sUUFBUSxDQUFDO0FBQ3BCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpbnRlcnZhbCB9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQgeyBBdXRvcGxheVN1c3BlbmRlciB9IGZyb20gJy4uLy4uLy4uL21vZGVscy9hdXRvcGxheS1zdXNwZW5kZXInO1xuaW1wb3J0IHsgQ2Fyb3VzZWxBdXRvcGxheSB9IGZyb20gJy4uLy4uLy4uL21vZGVscy9jYXJvdXNlbC1hdXRvcGxheSc7XG5cbi8qKiBTdGFydHMgY2Fyb3VzZWwgYXV0b3BsYXkgd2hldGhlciBvbmUgaXMgZW5hYmxlZCAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuYWJsZUF1dG9wbGF5KFxuICAgIGF1dG9wbGF5RW5hYmxlZDogYm9vbGVhbixcbiAgICB0cmFuc2l0aW9uRHVyYXRpb246IG51bWJlcixcbiAgICBhdXRvcGxheURlbGF5OiBudW1iZXIsXG4gICAgaXNCcm93c2VyOiBib29sZWFuLFxuICAgIGF1dG9wbGF5QWN0aW9uOiAoKSA9PiB2b2lkLFxuICAgIHN1c3BlbmRlcj86IEF1dG9wbGF5U3VzcGVuZGVyLFxuICAgIGF1dG9wbGF5PzogQ2Fyb3VzZWxBdXRvcGxheSxcbik6IENhcm91c2VsQXV0b3BsYXkge1xuICAgIGlmICghYXV0b3BsYXkpIHtcbiAgICAgICAgYXV0b3BsYXkgPSBuZXcgQ2Fyb3VzZWxBdXRvcGxheSgpO1xuICAgIH1cbiAgICBhdXRvcGxheS5hdXRvcGxheVN1YnNjcmlwdGlvbj8udW5zdWJzY3JpYmUoKTtcbiAgICBpZiAoIWF1dG9wbGF5LmF1dG9wbGF5U3VzcGVuZGVycykge1xuICAgICAgICBhdXRvcGxheS5hdXRvcGxheVN1c3BlbmRlcnMgPSBuZXcgU2V0PEF1dG9wbGF5U3VzcGVuZGVyPigpO1xuICAgIH1cbiAgICBpZiAoc3VzcGVuZGVyKSB7XG4gICAgICAgIGF1dG9wbGF5LmF1dG9wbGF5U3VzcGVuZGVycy5kZWxldGUoc3VzcGVuZGVyKTtcbiAgICB9XG4gICAgaWYgKGF1dG9wbGF5RW5hYmxlZCAmJiAhYXV0b3BsYXkuYXV0b3BsYXlTdXNwZW5kZXJzLnNpemUgJiYgaXNCcm93c2VyKSB7XG4gICAgICAgIC8vIERlbGF5IGNhbid0IGJlIHNtYWxsZXIgdGhhbiB0cmFuc2l0aW9uIGl0c2VsZiBpbiBvcmRlciB0byBhdm9pZCBlbmRsZXNzIGFuaW1hdGlvblxuICAgICAgICBhdXRvcGxheS5pbnRlcnZhbCA9IE1hdGgubWF4KHRyYW5zaXRpb25EdXJhdGlvbiwgYXV0b3BsYXlEZWxheSk7XG4gICAgICAgIGF1dG9wbGF5LmF1dG9wbGF5U3Vic2NyaXB0aW9uID0gaW50ZXJ2YWwoYXV0b3BsYXkuaW50ZXJ2YWwpLnN1YnNjcmliZShhdXRvcGxheUFjdGlvbik7XG4gICAgfVxuXG4gICAgcmV0dXJuIGF1dG9wbGF5O1xufVxuIl19