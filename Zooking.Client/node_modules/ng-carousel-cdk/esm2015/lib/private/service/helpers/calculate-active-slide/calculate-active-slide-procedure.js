import { ContinueWith } from '../../../models/procedure/handler/contiue-with.model';
import { getViewportWidth } from '../get-viewport-width/get-viewport-width';
import { calculateActiveSlide } from './calculate-active-slide';
/**
 * Given current slide state, assigns active slide
 */
export function calculateActiveSlideProcedure() {
    return ({ state, procedureState, environment }) => {
        var _a, _b;
        const result = calculateActiveSlide(state.slides, state.offset, state.config.alignMode, state.config.slideWidth, getViewportWidth(state), Math.min(state.config.slideWidth / 2, environment.swipeThreshold), procedureState.passedDistance || null);
        state.activeSlideIndex = result.slideIndex;
        state.activeItemIndex = (_b = (_a = state.slides[result.slideIndex]) === null || _a === void 0 ? void 0 : _a.itemIndex) !== null && _b !== void 0 ? _b : 0;
        return new ContinueWith(state);
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsY3VsYXRlLWFjdGl2ZS1zbGlkZS1wcm9jZWR1cmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1jYXJvdXNlbC9zcmMvbGliL3ByaXZhdGUvc2VydmljZS9oZWxwZXJzL2NhbGN1bGF0ZS1hY3RpdmUtc2xpZGUvY2FsY3VsYXRlLWFjdGl2ZS1zbGlkZS1wcm9jZWR1cmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHNEQUFzRCxDQUFDO0FBSXBGLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDBDQUEwQyxDQUFDO0FBQzVFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBRWhFOztHQUVHO0FBQ0gsTUFBTSxVQUFVLDZCQUE2QjtJQUN6QyxPQUFPLENBQUMsRUFBQyxLQUFLLEVBQUUsY0FBYyxFQUFFLFdBQVcsRUFBdUIsRUFBb0IsRUFBRTs7UUFDcEYsTUFBTSxNQUFNLEdBQUcsb0JBQW9CLENBQy9CLEtBQUssQ0FBQyxNQUFNLEVBQ1osS0FBSyxDQUFDLE1BQU0sRUFDWixLQUFLLENBQUMsTUFBTSxDQUFDLFNBQVMsRUFDdEIsS0FBSyxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQ3ZCLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxFQUN2QixJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsVUFBVSxHQUFHLENBQUMsRUFBRSxXQUFXLENBQUMsY0FBYyxDQUFDLEVBQ2pFLGNBQWMsQ0FBQyxjQUFjLElBQUksSUFBSSxDQUN4QyxDQUFDO1FBQ0YsS0FBSyxDQUFDLGdCQUFnQixHQUFHLE1BQU0sQ0FBQyxVQUFVLENBQUM7UUFDM0MsS0FBSyxDQUFDLGVBQWUsZUFBRyxLQUFLLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsMENBQUUsU0FBUyxtQ0FBSSxDQUFDLENBQUM7UUFFeEUsT0FBTyxJQUFJLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNuQyxDQUFDLENBQUM7QUFDTixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29udGludWVXaXRoIH0gZnJvbSAnLi4vLi4vLi4vbW9kZWxzL3Byb2NlZHVyZS9oYW5kbGVyL2NvbnRpdWUtd2l0aC5tb2RlbCc7XG5pbXBvcnQgeyBQcm9jZWR1cmVIYW5kbGVyIH0gZnJvbSAnLi4vLi4vLi4vbW9kZWxzL3Byb2NlZHVyZS9oYW5kbGVyL3Byb2NlZHVyZS1oYW5kbGVyLmludGVyZmFjZSc7XG5pbXBvcnQgeyBQcm9jZWR1cmVTdGF0ZUZhY2FkZSB9IGZyb20gJy4uLy4uLy4uL21vZGVscy9wcm9jZWR1cmUvcHJvY2VkdXJlLXN0YXRlLWZhY2FkZS5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgUHJvY2VkdXJlIH0gZnJvbSAnLi4vLi4vLi4vbW9kZWxzL3Byb2NlZHVyZS9wcm9jZWR1cmUudHlwZSc7XG5pbXBvcnQgeyBnZXRWaWV3cG9ydFdpZHRoIH0gZnJvbSAnLi4vZ2V0LXZpZXdwb3J0LXdpZHRoL2dldC12aWV3cG9ydC13aWR0aCc7XG5pbXBvcnQgeyBjYWxjdWxhdGVBY3RpdmVTbGlkZSB9IGZyb20gJy4vY2FsY3VsYXRlLWFjdGl2ZS1zbGlkZSc7XG5cbi8qKlxuICogR2l2ZW4gY3VycmVudCBzbGlkZSBzdGF0ZSwgYXNzaWducyBhY3RpdmUgc2xpZGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNhbGN1bGF0ZUFjdGl2ZVNsaWRlUHJvY2VkdXJlKCk6IFByb2NlZHVyZSB7XG4gICAgcmV0dXJuICh7c3RhdGUsIHByb2NlZHVyZVN0YXRlLCBlbnZpcm9ubWVudH06IFByb2NlZHVyZVN0YXRlRmFjYWRlKTogUHJvY2VkdXJlSGFuZGxlciA9PiB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGNhbGN1bGF0ZUFjdGl2ZVNsaWRlKFxuICAgICAgICAgICAgc3RhdGUuc2xpZGVzLFxuICAgICAgICAgICAgc3RhdGUub2Zmc2V0LFxuICAgICAgICAgICAgc3RhdGUuY29uZmlnLmFsaWduTW9kZSxcbiAgICAgICAgICAgIHN0YXRlLmNvbmZpZy5zbGlkZVdpZHRoLFxuICAgICAgICAgICAgZ2V0Vmlld3BvcnRXaWR0aChzdGF0ZSksXG4gICAgICAgICAgICBNYXRoLm1pbihzdGF0ZS5jb25maWcuc2xpZGVXaWR0aCAvIDIsIGVudmlyb25tZW50LnN3aXBlVGhyZXNob2xkKSxcbiAgICAgICAgICAgIHByb2NlZHVyZVN0YXRlLnBhc3NlZERpc3RhbmNlIHx8IG51bGwsXG4gICAgICAgICk7XG4gICAgICAgIHN0YXRlLmFjdGl2ZVNsaWRlSW5kZXggPSByZXN1bHQuc2xpZGVJbmRleDtcbiAgICAgICAgc3RhdGUuYWN0aXZlSXRlbUluZGV4ID0gc3RhdGUuc2xpZGVzW3Jlc3VsdC5zbGlkZUluZGV4XT8uaXRlbUluZGV4ID8/IDA7XG5cbiAgICAgICAgcmV0dXJuIG5ldyBDb250aW51ZVdpdGgoc3RhdGUpO1xuICAgIH07XG59XG4iXX0=