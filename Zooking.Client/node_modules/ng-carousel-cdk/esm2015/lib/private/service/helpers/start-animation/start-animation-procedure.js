import { ContinueWith } from '../../../models/procedure/handler/contiue-with.model';
import { startAnimation } from './start-animation';
/**
 * Creates new transition from one slide to another
 */
export function startAnimationProcedure() {
    return ({ state, procedureState, environment }) => {
        var _a, _b, _c;
        const animation = startAnimation(state.animatableContainer, procedureState.offsetSnapshot, state.offset, state.config.widthMode, state.config.transitionDuration, (_a = environment === null || environment === void 0 ? void 0 : environment.animationBezierArgs) !== null && _a !== void 0 ? _a : [], (_b = environment === null || environment === void 0 ? void 0 : environment.isBrowser) !== null && _b !== void 0 ? _b : false, (_c = environment === null || environment === void 0 ? void 0 : environment.afterAnimationAction) !== null && _c !== void 0 ? _c : (() => { }), environment === null || environment === void 0 ? void 0 : environment.animationBuilder);
        state.animation = animation;
        return new ContinueWith(state);
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhcnQtYW5pbWF0aW9uLXByb2NlZHVyZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25nLWNhcm91c2VsL3NyYy9saWIvcHJpdmF0ZS9zZXJ2aWNlL2hlbHBlcnMvc3RhcnQtYW5pbWF0aW9uL3N0YXJ0LWFuaW1hdGlvbi1wcm9jZWR1cmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHNEQUFzRCxDQUFDO0FBSXBGLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUVuRDs7R0FFRztBQUNILE1BQU0sVUFBVSx1QkFBdUI7SUFDbkMsT0FBTyxDQUFDLEVBQUMsS0FBSyxFQUFFLGNBQWMsRUFBRSxXQUFXLEVBQXVCLEVBQW9CLEVBQUU7O1FBQ3BGLE1BQU0sU0FBUyxHQUFHLGNBQWMsQ0FDNUIsS0FBSyxDQUFDLG1CQUFtQixFQUN6QixjQUFjLENBQUMsY0FBYyxFQUM3QixLQUFLLENBQUMsTUFBTSxFQUNaLEtBQUssQ0FBQyxNQUFNLENBQUMsU0FBUyxFQUN0QixLQUFLLENBQUMsTUFBTSxDQUFDLGtCQUFrQixRQUMvQixXQUFXLGFBQVgsV0FBVyx1QkFBWCxXQUFXLENBQUUsbUJBQW1CLG1DQUFJLEVBQUUsUUFDdEMsV0FBVyxhQUFYLFdBQVcsdUJBQVgsV0FBVyxDQUFFLFNBQVMsbUNBQUksS0FBSyxRQUMvQixXQUFXLGFBQVgsV0FBVyx1QkFBWCxXQUFXLENBQUUsb0JBQW9CLG1DQUFJLENBQUMsR0FBRyxFQUFFLEdBQUUsQ0FBQyxDQUFDLEVBQy9DLFdBQVcsYUFBWCxXQUFXLHVCQUFYLFdBQVcsQ0FBRSxnQkFBZ0IsQ0FDaEMsQ0FBQztRQUNGLEtBQUssQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1FBRTVCLE9BQU8sSUFBSSxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDbkMsQ0FBQyxDQUFDO0FBQ04sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbnRpbnVlV2l0aCB9IGZyb20gJy4uLy4uLy4uL21vZGVscy9wcm9jZWR1cmUvaGFuZGxlci9jb250aXVlLXdpdGgubW9kZWwnO1xuaW1wb3J0IHsgUHJvY2VkdXJlSGFuZGxlciB9IGZyb20gJy4uLy4uLy4uL21vZGVscy9wcm9jZWR1cmUvaGFuZGxlci9wcm9jZWR1cmUtaGFuZGxlci5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgUHJvY2VkdXJlU3RhdGVGYWNhZGUgfSBmcm9tICcuLi8uLi8uLi9tb2RlbHMvcHJvY2VkdXJlL3Byb2NlZHVyZS1zdGF0ZS1mYWNhZGUuaW50ZXJmYWNlJztcbmltcG9ydCB7IFByb2NlZHVyZSB9IGZyb20gJy4uLy4uLy4uL21vZGVscy9wcm9jZWR1cmUvcHJvY2VkdXJlLnR5cGUnO1xuaW1wb3J0IHsgc3RhcnRBbmltYXRpb24gfSBmcm9tICcuL3N0YXJ0LWFuaW1hdGlvbic7XG5cbi8qKlxuICogQ3JlYXRlcyBuZXcgdHJhbnNpdGlvbiBmcm9tIG9uZSBzbGlkZSB0byBhbm90aGVyXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzdGFydEFuaW1hdGlvblByb2NlZHVyZSgpOiBQcm9jZWR1cmUge1xuICAgIHJldHVybiAoe3N0YXRlLCBwcm9jZWR1cmVTdGF0ZSwgZW52aXJvbm1lbnR9OiBQcm9jZWR1cmVTdGF0ZUZhY2FkZSk6IFByb2NlZHVyZUhhbmRsZXIgPT4ge1xuICAgICAgICBjb25zdCBhbmltYXRpb24gPSBzdGFydEFuaW1hdGlvbihcbiAgICAgICAgICAgIHN0YXRlLmFuaW1hdGFibGVDb250YWluZXIsXG4gICAgICAgICAgICBwcm9jZWR1cmVTdGF0ZS5vZmZzZXRTbmFwc2hvdCxcbiAgICAgICAgICAgIHN0YXRlLm9mZnNldCxcbiAgICAgICAgICAgIHN0YXRlLmNvbmZpZy53aWR0aE1vZGUsXG4gICAgICAgICAgICBzdGF0ZS5jb25maWcudHJhbnNpdGlvbkR1cmF0aW9uLFxuICAgICAgICAgICAgZW52aXJvbm1lbnQ/LmFuaW1hdGlvbkJlemllckFyZ3MgPz8gW10sXG4gICAgICAgICAgICBlbnZpcm9ubWVudD8uaXNCcm93c2VyID8/IGZhbHNlLFxuICAgICAgICAgICAgZW52aXJvbm1lbnQ/LmFmdGVyQW5pbWF0aW9uQWN0aW9uID8/ICgoKSA9PiB7fSksXG4gICAgICAgICAgICBlbnZpcm9ubWVudD8uYW5pbWF0aW9uQnVpbGRlcixcbiAgICAgICAgKTtcbiAgICAgICAgc3RhdGUuYW5pbWF0aW9uID0gYW5pbWF0aW9uO1xuXG4gICAgICAgIHJldHVybiBuZXcgQ29udGludWVXaXRoKHN0YXRlKTtcbiAgICB9O1xufVxuIl19