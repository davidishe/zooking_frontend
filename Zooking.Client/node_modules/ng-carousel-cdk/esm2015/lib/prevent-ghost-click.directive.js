import { Directive, ElementRef, HostListener } from '@angular/core';
import { asyncScheduler } from 'rxjs';
import { HammerProviderService } from './private/service/hammer-provider.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './private/service/hammer-provider.service';
export class PreventGhostClickDirective {
    constructor(elementRef, hammer) {
        this.elementRef = elementRef;
        this.hammer = hammer;
        this.shouldPreventClick = false;
    }
    processClickEvent(event) {
        if (this.shouldPreventClick) {
            event.preventDefault();
            event.stopImmediatePropagation();
        }
    }
    ngOnInit() {
        this.listenPanEndEvents();
    }
    ngOnDestroy() {
        if (this.hammerManager) {
            this.hammerManager.destroy();
        }
    }
    listenPanEndEvents() {
        this.hammerManager = this.hammer.managerFor(this.elementRef.nativeElement);
        if (!this.hammerManager) {
            return;
        }
        this.hammerManager.on('panend pancancel', () => {
            this.shouldPreventClick = true;
            asyncScheduler.schedule(() => {
                this.shouldPreventClick = false;
            });
        });
    }
}
PreventGhostClickDirective.ɵfac = function PreventGhostClickDirective_Factory(t) { return new (t || PreventGhostClickDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.HammerProviderService)); };
PreventGhostClickDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: PreventGhostClickDirective, selectors: [["", "ngCarouselPreventGhostClick", ""]], hostBindings: function PreventGhostClickDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function PreventGhostClickDirective_click_HostBindingHandler($event) { return ctx.processClickEvent($event); });
    } } });
PreventGhostClickDirective.ctorParameters = () => [
    { type: ElementRef },
    { type: HammerProviderService }
];
PreventGhostClickDirective.propDecorators = {
    processClickEvent: [{ type: HostListener, args: ['click', ['$event'],] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PreventGhostClickDirective, [{
        type: Directive,
        args: [{
                selector: '[ngCarouselPreventGhostClick]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.HammerProviderService }]; }, { processClickEvent: [{
            type: HostListener,
            args: ['click', ['$event']]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJldmVudC1naG9zdC1jbGljay5kaXJlY3RpdmUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25nLWNhcm91c2VsL3NyYy9saWIvcHJldmVudC1naG9zdC1jbGljay5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUN2RixPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBRXRDLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDJDQUEyQyxDQUFDOzs7QUFLbEYsTUFBTSxPQUFPLDBCQUEwQjtBQUFHLElBYXRDLFlBQ1ksVUFBc0IsRUFDdEIsTUFBNkI7QUFDM0MsUUFGYyxlQUFVLEdBQVYsVUFBVSxDQUFZO0FBQUMsUUFDdkIsV0FBTSxHQUFOLE1BQU0sQ0FBdUI7QUFBQyxRQVpsQyx1QkFBa0IsR0FBRyxLQUFLLENBQUM7QUFDdkMsSUFhSSxDQUFDO0FBQ0wsSUFaWSxpQkFBaUIsQ0FBQyxLQUFZO0FBQUksUUFDdEMsSUFBSSxJQUFJLENBQUMsa0JBQWtCLEVBQUU7QUFDckMsWUFBWSxLQUFLLENBQUMsY0FBYyxFQUFFLENBQUM7QUFDbkMsWUFBWSxLQUFLLENBQUMsd0JBQXdCLEVBQUUsQ0FBQztBQUM3QyxTQUFTO0FBQ1QsSUFBSSxDQUFDO0FBQ0wsSUFPSSxRQUFRO0FBQ1osUUFBUSxJQUFJLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztBQUNsQyxJQUFJLENBQUM7QUFDTCxJQUNJLFdBQVc7QUFDZixRQUFRLElBQUksSUFBSSxDQUFDLGFBQWEsRUFBRTtBQUNoQyxZQUFZLElBQUksQ0FBQyxhQUFhLENBQUMsT0FBTyxFQUFFLENBQUM7QUFDekMsU0FBUztBQUNULElBQUksQ0FBQztBQUNMLElBQ1ksa0JBQWtCO0FBQUssUUFDM0IsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0FBQ25GLFFBQVEsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUU7QUFDakMsWUFDWSxPQUFPO0FBQ25CLFNBQVM7QUFDVCxRQUFRLElBQUksQ0FBQyxhQUFhLENBQUMsRUFBRSxDQUFDLGtCQUFrQixFQUFFLEdBQUcsRUFBRTtBQUN2RCxZQUFZLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxJQUFJLENBQUM7QUFDM0MsWUFBWSxjQUFjLENBQUMsUUFBUSxDQUFDLEdBQUcsRUFBRTtBQUN6QyxnQkFBZ0IsSUFBSSxDQUFDLGtCQUFrQixHQUFHLEtBQUssQ0FBQztBQUNoRCxZQUFZLENBQUMsQ0FBQyxDQUFDO0FBQ2YsUUFBUSxDQUFDLENBQUMsQ0FBQztBQUNYLElBQUksQ0FBQztBQUNMO3NEQTdDQyxTQUFTLFNBQUMsa0JBQ1AsUUFBUSxFQUFFLCtCQUErQixlQUM1Qzs7O1dBQ0k7QUFBQztBQUFvRCxZQVJ0QyxVQUFVO0FBQUksWUFHekIscUJBQXFCO0FBQUc7QUFBRztBQUE4QyxnQ0FVN0UsWUFBWSxTQUFDLE9BQU8sRUFBRSxDQUFDLFFBQVEsQ0FBQztBQUNqQzs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIEhvc3RMaXN0ZW5lciwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGFzeW5jU2NoZWR1bGVyIH0gZnJvbSAncnhqcyc7XG5cbmltcG9ydCB7IEhhbW1lclByb3ZpZGVyU2VydmljZSB9IGZyb20gJy4vcHJpdmF0ZS9zZXJ2aWNlL2hhbW1lci1wcm92aWRlci5zZXJ2aWNlJztcblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdbbmdDYXJvdXNlbFByZXZlbnRHaG9zdENsaWNrXScsXG59KVxuZXhwb3J0IGNsYXNzIFByZXZlbnRHaG9zdENsaWNrRGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuXG4gICAgcHJpdmF0ZSBoYW1tZXJNYW5hZ2VyOiBIYW1tZXJNYW5hZ2VyO1xuICAgIHByaXZhdGUgc2hvdWxkUHJldmVudENsaWNrID0gZmFsc2U7XG5cbiAgICBASG9zdExpc3RlbmVyKCdjbGljaycsIFsnJGV2ZW50J10pXG4gICAgcHJpdmF0ZSBwcm9jZXNzQ2xpY2tFdmVudChldmVudDogRXZlbnQpOiB2b2lkIHtcbiAgICAgICAgaWYgKHRoaXMuc2hvdWxkUHJldmVudENsaWNrKSB7XG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHJpdmF0ZSBlbGVtZW50UmVmOiBFbGVtZW50UmVmLFxuICAgICAgICBwcml2YXRlIGhhbW1lcjogSGFtbWVyUHJvdmlkZXJTZXJ2aWNlLFxuICAgICkge1xuICAgIH1cblxuICAgIG5nT25Jbml0KCkge1xuICAgICAgICB0aGlzLmxpc3RlblBhbkVuZEV2ZW50cygpO1xuICAgIH1cblxuICAgIG5nT25EZXN0cm95KCkge1xuICAgICAgICBpZiAodGhpcy5oYW1tZXJNYW5hZ2VyKSB7XG4gICAgICAgICAgICB0aGlzLmhhbW1lck1hbmFnZXIuZGVzdHJveSgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBsaXN0ZW5QYW5FbmRFdmVudHMoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuaGFtbWVyTWFuYWdlciA9IHRoaXMuaGFtbWVyLm1hbmFnZXJGb3IodGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQpO1xuICAgICAgICBpZiAoIXRoaXMuaGFtbWVyTWFuYWdlcikge1xuXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5oYW1tZXJNYW5hZ2VyLm9uKCdwYW5lbmQgcGFuY2FuY2VsJywgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5zaG91bGRQcmV2ZW50Q2xpY2sgPSB0cnVlO1xuICAgICAgICAgICAgYXN5bmNTY2hlZHVsZXIuc2NoZWR1bGUoKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuc2hvdWxkUHJldmVudENsaWNrID0gZmFsc2U7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG59XG4iXX0=