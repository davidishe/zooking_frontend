{"version":3,"file":"carousel.service.d.ts","sources":["carousel.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AnimationBuilder } from '@angular/animations';\nimport { OnDestroy, TemplateRef } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CarouselConfig } from '../../carousel-config';\nimport { AutoplaySuspender } from '../models/autoplay-suspender';\nimport { CarouselState } from '../models/carousel-state';\nimport { IdGenerator } from '../models/id-generator';\nexport declare class CarouselService implements OnDestroy {\n    private animationBuilder;\n    private slideIdGenerator;\n    private platformId;\n    private readonly carouselState$;\n    /** Describes constant entities for procedures */\n    private readonly procedureEnvironment;\n    constructor(animationBuilder: AnimationBuilder, slideIdGenerator: IdGenerator, platformId: Object);\n    ngOnDestroy(): void;\n    carouselStateChanges(): Observable<CarouselState>;\n    setItemIndex(newItemIndex: number): void;\n    prev(): void;\n    /**\n     * @param omitAutoplayReset whether autoplay timer should not be resetted\n     */\n    next(omitAutoplayReset?: boolean): void;\n    recalculate(): void;\n    /** Update state to announce that drag sequence just started */\n    dragStart(): void;\n    /**\n     * Update state to announce that drag sequence just ended\n     * and perform necessary cleanups\n     */\n    dragEnd(passedDistance: number): void;\n    /** Process single drag tick with given from and to coordinates */\n    drag(fromX: number, toX: number): void;\n    setSlideTemplate(newTemplateRef: TemplateRef<any> | null): void;\n    disableAutoplay(suspender: AutoplaySuspender): void;\n    /**\n     * Starts new autoplay timer\n     */\n    enableAutoplay(suspender?: AutoplaySuspender): void;\n    setContainers(widthContainer: HTMLElement, animatableContainer: HTMLElement): void;\n    setConfig(newConfig: CarouselConfig): void;\n    private cleanup;\n    /**\n     * Applies specified procedure to carousel state\n     */\n    private apply;\n}\n"]}