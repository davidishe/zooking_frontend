{"version":3,"file":"carousel-engine.component.d.ts","sources":["carousel-engine.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, OnDestroy, OnInit, Renderer2, TemplateRef } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CarouselSlide } from '../models/carousel-slide';\nimport { CarouselSlideContext } from '../models/carousel-slide-context';\nimport { CarouselService } from '../service/carousel.service';\nimport { HammerProviderService } from '../service/hammer-provider.service';\nexport declare class CarouselEngineComponent implements OnInit, OnDestroy {\n    private carousel;\n    private elementRef;\n    private renderer;\n    private hammer;\n    private platformId;\n    galleryRef: ElementRef;\n    readonly transformValue$: Observable<string>;\n    readonly slideWidth$: Observable<string>;\n    readonly template$: Observable<TemplateRef<any>>;\n    readonly slides$: Observable<CarouselSlide[]>;\n    focused: boolean;\n    private readonly destroyed$;\n    private mouseEnterDestructor;\n    private mouseLeaveDestructor;\n    private keyboardListener;\n    private containerScrollListener;\n    private hammerManager;\n    private get htmlElement();\n    constructor(carousel: CarouselService, elementRef: ElementRef, renderer: Renderer2, hammer: HammerProviderService, platformId: Object);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    trackByFn(index: number, item: CarouselSlide): number;\n    contextOf(slide: CarouselSlide): CarouselSlideContext;\n    focusIn(): void;\n    focusOut(): void;\n    private destroyMouseListeners;\n    private destroyHammer;\n    private destroyKeyboardListeners;\n    private destroyElementScrollListener;\n    private transformValueChanges;\n    private slideWidthChanges;\n    private slidesChanges;\n    private templateChanges;\n    private listenToAutoplay;\n    private listenToDragEvents;\n    private listenToResizeEvents;\n    private listenToKeyEvents;\n    /**\n     * Horizontal scroll might accidentaly happen on parent container\n     * when pressing arrow buttons too fast. We should return\n     * container to initial position when that happens.\n     */\n    private listenToScrollEvents;\n}\n"]}