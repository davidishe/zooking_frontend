import { CarouselWidthMode } from './carousel-width-mode';
import { CarouselAlignMode } from './carousel-align-mode';
export declare class CarouselConfig {
    /**
     * Array of data to display
     */
    items?: any[];
    /**
     * Describes how carousel calculates its content width.
     * Consult with corresponding enum to see what options
     * are available.
     */
    widthMode?: CarouselWidthMode;
    /**
     * Slide width. It could be pixels or percents, based on mode
     * configuration.
     */
    slideWidth?: number;
    /**
     * Describes how slides should be positioned relative to
     * carousel viewport
     */
    alignMode?: CarouselAlignMode;
    /**
     * Whether autoplay is enabled
     */
    autoplayEnabled?: boolean;
    /**
     * Time in ms of how long carousel would wait until automatic
     * slide increment. Respects `autoplayEnabled` value.
     */
    autoplayDelay?: number;
    /**
     * Whether mouse drag or gesture panning enabled
     */
    dragEnabled?: boolean;
    /**
     * Whether carousel should start from beginning after last
     * slide
     */
    shouldLoop?: boolean;
    /**
     * Time in ms of how long transition between slides would last
     */
    transitionDuration?: number;
    /**
     * Whether carousel should automatically recalculate on window resize.
     * This option is recommended when using pixel width mode or left
     * alignment.
     */
    shouldRecalculateOnResize?: boolean;
    /**
     * Value in current width mode units which are virtally added to both sides
     * of viewport. Slides within this virtual zone should always be presented
     * whether loop mode is on.
     */
    threshold?: number;
    constructor(config?: CarouselConfig);
}
