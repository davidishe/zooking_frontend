import { Component, ContentChild, Input, TemplateRef, ViewEncapsulation, } from '@angular/core';
import { Router } from '@angular/router';
import { BreadcrumbItemDirective } from './breadcrumb-item.directive';
import { BreadcrumbService } from './breadcrumb.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './breadcrumb.service';
import * as ɵngcc2 from '@angular/router';
import * as ɵngcc3 from '@angular/common';

function BreadcrumbComponent_ng_container_2_a_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function BreadcrumbComponent_ng_container_2_a_2_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const breadcrumb_r1 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(breadcrumb_r1.label);
} }
const _c0 = function (a0) { return { "xng-breadcrumb-link-disabled": a0 }; };
const _c1 = function (a0, a1, a2, a3) { return { $implicit: a0, info: a1, last: a2, first: a3 }; };
function BreadcrumbComponent_ng_container_2_a_2_Template(rf, ctx) { if (rf & 1) {
    const _r12 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 7);
    ɵngcc0.ɵɵlistener("click", function BreadcrumbComponent_ng_container_2_a_2_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); const breadcrumb_r1 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.handleRoute(breadcrumb_r1); });
    ɵngcc0.ɵɵtemplate(1, BreadcrumbComponent_ng_container_2_a_2_ng_container_1_Template, 1, 0, "ng-container", 8);
    ɵngcc0.ɵɵtemplate(2, BreadcrumbComponent_ng_container_2_a_2_ng_container_2_Template, 2, 1, "ng-container", 9);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r13 = ɵngcc0.ɵɵnextContext();
    const breadcrumb_r1 = ctx_r13.$implicit;
    const isLast_r2 = ctx_r13.last;
    const isFirst_r3 = ctx_r13.first;
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(5, _c0, breadcrumb_r1.disable));
    ɵngcc0.ɵɵattribute("aria-disabled", breadcrumb_r1.disable);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r4.itemTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction4(7, _c1, breadcrumb_r1.label, breadcrumb_r1.info, isLast_r2, isFirst_r3));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r4.itemTemplate);
} }
function BreadcrumbComponent_ng_container_2_label_3_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function BreadcrumbComponent_ng_container_2_label_3_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const breadcrumb_r1 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(breadcrumb_r1.label);
} }
function BreadcrumbComponent_ng_container_2_label_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "label", 10);
    ɵngcc0.ɵɵtemplate(1, BreadcrumbComponent_ng_container_2_label_3_ng_container_1_Template, 1, 0, "ng-container", 8);
    ɵngcc0.ɵɵtemplate(2, BreadcrumbComponent_ng_container_2_label_3_ng_container_2_Template, 2, 1, "ng-container", 9);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r17 = ɵngcc0.ɵɵnextContext();
    const breadcrumb_r1 = ctx_r17.$implicit;
    const isLast_r2 = ctx_r17.last;
    const isFirst_r3 = ctx_r17.first;
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r5.itemTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction4(3, _c1, breadcrumb_r1.label, breadcrumb_r1.info, isLast_r2, isFirst_r3));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r5.itemTemplate);
} }
function BreadcrumbComponent_ng_container_2_li_4_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function BreadcrumbComponent_ng_container_2_li_4_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r19 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r19.separator);
} }
function BreadcrumbComponent_ng_container_2_li_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 11);
    ɵngcc0.ɵɵtemplate(1, BreadcrumbComponent_ng_container_2_li_4_ng_container_1_Template, 1, 0, "ng-container", 12);
    ɵngcc0.ɵɵtemplate(2, BreadcrumbComponent_ng_container_2_li_4_ng_container_2_Template, 2, 1, "ng-container", 9);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r6.separatorTemplate);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r6.separatorTemplate);
} }
function BreadcrumbComponent_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "li", 3);
    ɵngcc0.ɵɵtemplate(2, BreadcrumbComponent_ng_container_2_a_2_Template, 3, 12, "a", 4);
    ɵngcc0.ɵɵtemplate(3, BreadcrumbComponent_ng_container_2_label_3_Template, 3, 8, "label", 5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, BreadcrumbComponent_ng_container_2_li_4_Template, 3, 2, "li", 6);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const isLast_r2 = ctx.last;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !isLast_r2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", isLast_r2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !isLast_r2);
} }
export class BreadcrumbComponent {
    constructor(breadcrumbService, router) {
        this.breadcrumbService = breadcrumbService;
        this.router = router;
        this._separator = '/';
        /**
         * If true, breadcrumb is auto generated even without any mapping label
         * Default label is same as route segment
         */
        this.autoGenerate = true;
        /**
         * By default query params will be preserved with breadcrumbs
         */
        this.preserveQueryParams = true;
        /**
         * By default query fragments will be preserved with breadcrumbs
         */
        this.preserveFragment = true;
        /**
         * custom class provided by consumer to increase specificity
         * This will benefit to override styles that are conflicting
         */
        this.class = '';
    }
    /**
     * separator between breadcrumbs, defaults to '/'.
     * User can customize separator either by passing a String or Template
     *
     * String --> Ex: <xng-breadcrumb separator="-"> </xng-breadcrumb>
     *
     * Template --> Ex: <xng-breadcrumb [separator]="separatorTemplate"> </xng-breadcrumb>
     * <ng-template #separatorTemplate><mat-icon>arrow_right</mat-icon></ng-template>
     */
    set separator(value) {
        if (value instanceof TemplateRef) {
            this.separatorTemplate = value;
            this._separator = undefined;
        }
        else {
            this.separatorTemplate = undefined;
            this._separator = value || '/';
        }
    }
    get separator() {
        return this._separator;
    }
    ngOnInit() {
        this.subscription = this.breadcrumbService.breadcrumbs$.subscribe((breadcrumbs) => {
            this.breadcrumbs = breadcrumbs
                .map((breadcrumb) => {
                // Do not mutate breadcrumb as its source of truth.
                // There can be scenarios where we can have multiple xng-breadcrumb instances in page
                return Object.assign(Object.assign({}, breadcrumb), { queryParams: this.preserveQueryParams
                        ? breadcrumb.queryParams
                        : undefined, fragment: this.preserveFragment ? breadcrumb.fragment : undefined });
            })
                .filter((breadcrumb) => {
                // Usually, breadcrumb list can contain a combination of auto generated and user specified labels
                // this filters autogenerated labels in case of "[autoGenerate]: false"
                if (this.autoGenerate) {
                    return true;
                }
                return !breadcrumb.isAutoGeneratedLabel;
            });
        });
    }
    ngOnDestroy() {
        this.subscription.unsubscribe();
    }
    handleRoute(breadcrumb) {
        const routeLink = breadcrumb.routeInterceptor
            ? breadcrumb.routeInterceptor(breadcrumb.routeLink, breadcrumb)
            : breadcrumb.routeLink;
        const { queryParams, fragment } = breadcrumb;
        this.router.navigate([routeLink], { queryParams, fragment });
    }
}
BreadcrumbComponent.ɵfac = function BreadcrumbComponent_Factory(t) { return new (t || BreadcrumbComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.BreadcrumbService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Router)); };
BreadcrumbComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BreadcrumbComponent, selectors: [["xng-breadcrumb"]], contentQueries: function BreadcrumbComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, BreadcrumbItemDirective, true, TemplateRef);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.itemTemplate = _t.first);
    } }, inputs: { autoGenerate: "autoGenerate", preserveQueryParams: "preserveQueryParams", preserveFragment: "preserveFragment", class: "class", separator: "separator" }, decls: 3, vars: 2, consts: [["aria-label", "breadcrumb", 1, "xng-breadcrumb-root", 3, "ngClass"], [1, "xng-breadcrumb-list"], [4, "ngFor", "ngForOf"], [1, "xng-breadcrumb-item"], ["class", "xng-breadcrumb-link", 3, "ngClass", "click", 4, "ngIf"], ["class", "xng-breadcrumb-trail", 4, "ngIf"], ["class", "xng-breadcrumb-separator", "aria-hidden", "true", "role", "separator", 4, "ngIf"], [1, "xng-breadcrumb-link", 3, "ngClass", "click"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], [4, "ngIf"], [1, "xng-breadcrumb-trail"], ["aria-hidden", "true", "role", "separator", 1, "xng-breadcrumb-separator"], [4, "ngTemplateOutlet"]], template: function BreadcrumbComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "nav", 0);
        ɵngcc0.ɵɵelementStart(1, "ol", 1);
        ɵngcc0.ɵɵtemplate(2, BreadcrumbComponent_ng_container_2_Template, 5, 3, "ng-container", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.class);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.breadcrumbs);
    } }, directives: [ɵngcc3.NgClass, ɵngcc3.NgForOf, ɵngcc3.NgIf, ɵngcc3.NgTemplateOutlet], styles: [".xng-breadcrumb-root{color:rgba(0,0,0,.6);margin:0}.xng-breadcrumb-list{align-items:center;display:flex;flex-wrap:wrap;margin:0;padding:0}.xng-breadcrumb-item{list-style:none}.xng-breadcrumb-trail{align-items:center;color:rgba(0,0,0,.9);display:flex}.xng-breadcrumb-link{align-items:center;color:inherit;display:flex;text-decoration:none;transition:-webkit-text-decoration .3s;transition:text-decoration .3s;transition:text-decoration .3s,-webkit-text-decoration .3s;white-space:nowrap}.xng-breadcrumb-link:hover{text-decoration:underline}.xng-breadcrumb-link-disabled{cursor:disabled;pointer-events:none}.xng-breadcrumb-separator{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;display:flex;margin-left:8px;margin-right:8px;user-select:none}"], encapsulation: 2 });
BreadcrumbComponent.ctorParameters = () => [
    { type: BreadcrumbService },
    { type: Router }
];
BreadcrumbComponent.propDecorators = {
    itemTemplate: [{ type: ContentChild, args: [BreadcrumbItemDirective, { static: false, read: TemplateRef },] }],
    autoGenerate: [{ type: Input }],
    preserveQueryParams: [{ type: Input }],
    preserveFragment: [{ type: Input }],
    class: [{ type: Input }],
    separator: [{ type: Input, args: ['separator',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BreadcrumbComponent, [{
        type: Component,
        args: [{
                selector: 'xng-breadcrumb',
                template: "<nav aria-label=\"breadcrumb\" class=\"xng-breadcrumb-root\" [ngClass]=\"class\">\n  <ol class=\"xng-breadcrumb-list\">\n    <ng-container\n      *ngFor=\"let breadcrumb of breadcrumbs; last as isLast; first as isFirst\"\n    >\n      <li class=\"xng-breadcrumb-item\">\n        <a\n          *ngIf=\"!isLast\"\n          (click)=\"handleRoute(breadcrumb)\"\n          class=\"xng-breadcrumb-link\"\n          [ngClass]=\"{ 'xng-breadcrumb-link-disabled': breadcrumb.disable }\"\n          [attr.aria-disabled]=\"breadcrumb.disable\"\n        >\n          <ng-container\n            *ngTemplateOutlet=\"\n              itemTemplate;\n              context: {\n                $implicit: breadcrumb.label,\n                info: breadcrumb.info,\n                last: isLast,\n                first: isFirst\n              }\n            \"\n          ></ng-container>\n          <ng-container *ngIf=\"!itemTemplate\">{{\n            breadcrumb.label\n          }}</ng-container>\n        </a>\n\n        <label *ngIf=\"isLast\" class=\"xng-breadcrumb-trail\">\n          <ng-container\n            *ngTemplateOutlet=\"\n              itemTemplate;\n              context: {\n                $implicit: breadcrumb.label,\n                info: breadcrumb.info,\n                last: isLast,\n                first: isFirst\n              }\n            \"\n          ></ng-container>\n          <ng-container *ngIf=\"!itemTemplate\">{{\n            breadcrumb.label\n          }}</ng-container>\n        </label>\n      </li>\n\n      <li\n        *ngIf=\"!isLast\"\n        class=\"xng-breadcrumb-separator\"\n        aria-hidden=\"true\"\n        role=\"separator\"\n      >\n        <ng-container *ngTemplateOutlet=\"separatorTemplate\"></ng-container>\n        <ng-container *ngIf=\"!separatorTemplate\">{{ separator }}</ng-container>\n      </li>\n    </ng-container>\n  </ol>\n</nav>\n",
                encapsulation: ViewEncapsulation.None,
                styles: [".xng-breadcrumb-root{color:rgba(0,0,0,.6);margin:0}.xng-breadcrumb-list{align-items:center;display:flex;flex-wrap:wrap;margin:0;padding:0}.xng-breadcrumb-item{list-style:none}.xng-breadcrumb-trail{align-items:center;color:rgba(0,0,0,.9);display:flex}.xng-breadcrumb-link{align-items:center;color:inherit;display:flex;text-decoration:none;transition:-webkit-text-decoration .3s;transition:text-decoration .3s;transition:text-decoration .3s,-webkit-text-decoration .3s;white-space:nowrap}.xng-breadcrumb-link:hover{text-decoration:underline}.xng-breadcrumb-link-disabled{cursor:disabled;pointer-events:none}.xng-breadcrumb-separator{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;display:flex;margin-left:8px;margin-right:8px;user-select:none}"]
            }]
    }], function () { return [{ type: ɵngcc1.BreadcrumbService }, { type: ɵngcc2.Router }]; }, { autoGenerate: [{
            type: Input
        }], preserveQueryParams: [{
            type: Input
        }], preserveFragment: [{
            type: Input
        }], class: [{
            type: Input
        }], separator: [{
            type: Input,
            args: ['separator']
        }], itemTemplate: [{
            type: ContentChild,
            args: [BreadcrumbItemDirective, { static: false, read: TemplateRef }]
        }] }); })();

//# sourceMappingURL=breadcrumb.component.js.map